# vim: ft=dockerfile:
FROM ubuntu:22.04 as builder

WORKDIR /root

# 安装增强版编译工具链
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      ca-certificates \
      curl \
      make \
      autoconf \
      automake \
      libtool \
      binutils \
      xz-utils \
      gcc \
      g++ \
      unzip \
      patchelf && \
    rm -rf /var/cache/apt/*

# 使用 NDK r28b (修复符号问题)
ENV NDK_VERSION=r28b
ENV NDK_ROOT=/root/android-ndk-${NDK_VERSION}
ENV TOOLCHAIN=${NDK_ROOT}/toolchains/llvm/prebuilt/linux-x86_64
ENV TARGET=aarch64-linux-android
ENV API_LEVEL=33

# 下载指定版本 NDK
RUN curl -L -o ndk.zip https://dl.google.com/android/repository/android-ndk-${NDK_VERSION}-linux.zip && \
    unzip -q ndk.zip && \
    rm ndk.zip

# 配置增强型编译参数
ENV CC=${TOOLCHAIN}/bin/${TARGET}${API_LEVEL}-clang \
    CXX=${TOOLCHAIN}/bin/${TARGET}${API_LEVEL}-clang++ \
    AR=${TOOLCHAIN}/bin/llvm-ar \
    STRIP=${TOOLCHAIN}/bin/llvm-strip \
    RANLIB=${TOOLCHAIN}/bin/llvm-ranlib \
    CFLAGS="-static -Os -fcommon" \  # 添加 -fcommon 解决符号冲突
    LDFLAGS="-static -Wl,--allow-multiple-definition"

# 使用 Bash 5.2.21 补丁版
ENV BASH_VERSION=5.2.21
RUN curl -LO https://ftp.gnu.org/gnu/bash/bash-${BASH_VERSION}.tar.gz && \
    tar xzf bash-${BASH_VERSION}.tar.gz && \
    rm bash-${BASH_VERSION}.tar.gz

# 应用符号冲突补丁
WORKDIR /root/bash-${BASH_VERSION}
RUN sed -i 's/strtoimax/__bash_strtoimax/g' strtoimax.c && \
    sed -i 's/strtoimax/__bash_strtoimax/g' include/stdint.h

# 配置编译选项
RUN ./configure \
    --host=${TARGET} \
    --prefix=/output \
    --enable-static-link \
    --without-bash-malloc \
    --disable-nls \
    --enable-minimal-config \
    --with-installed-readline=no \  # 禁用内置 readline
    bash_cv_func_strtoimax=no  # 强制禁用冲突函数

# 修正链接顺序
RUN make -j$(nproc) LIBS="-lc -lm -ldl"

# 验证阶段
FROM ubuntu:22.04
COPY --from=builder /output/bin/bash /app/bash-static
RUN file /app/bash-static && \
    { ldd /app/bash-static 2>&1 | grep -q "not a dynamic executable"; } && \
    { nm /app/bash-static | grep -q __bash_strtoimax; } && \
    echo "Build verification passed" || { echo "Build verification failed"; exit 1; }

VOLUME /out
CMD cp /app/bash-static /out
